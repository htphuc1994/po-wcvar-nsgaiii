import matplotlib.pyplot as plt
from matplotlib.lines import Line2D
import numpy as np
import pandas as pd
from matplotlib.font_manager import FontProperties

# experiment 19
# front_num_Array = [10, 7, 8, 7, 7, 7, 6, 5, 4, 4, 3, 3, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
# n_nds_Array = [9, 11, 6, 12, 8, 8, 12, 13, 18, 13, 19, 24, 23, 28, 33, 34, 42, 44, 55, 68, 77, 83, 92, 100, 108, 118, 122, 119, 124, 126, 128, 128, 128, 129, 134, 135, 85, 67, 66, 64, 66, 72, 74, 76, 76, 77, 78, 75, 77, 83, 76, 79, 67, 67, 70, 74, 74, 71, 76, 78, 79, 81, 83, 82, 88, 87, 89, 89, 90, 100, 91, 93, 85, 102, 109, 113, 112, 111, 111, 108, 113, 116, 84, 85, 83, 84, 88, 96, 95, 96, 101, 101, 102, 105, 106, 109, 117, 118, 113, 116, 115, 119, 120, 120, 118, 118, 119, 117, 119, 120, 123, 125, 130, 129, 129, 128, 129, 129, 130, 130, 129, 129, 129, 133, 134, 129, 127, 130, 131, 132, 131, 131, 131, 131, 131, 129, 130, 130, 130, 132, 133, 127, 129, 121, 125, 126, 126, 127, 127, 129, 130, 130, 132, 133, 133, 133, 132, 133, 133, 133, 133, 132, 132, 132, 132, 132, 132, 132, 134, 134, 134, 133, 133, 133, 134, 134, 135, 134, 134, 135, 135, 135, 135, 136, 137, 137, 138, 139, 137, 136, 137, 137, 138, 138, 140, 139, 139, 139, 140, 141]
# eps = [None, 0.4312464319, 0.0611442315, 0.0599299521, 0.091542984, 0.0953701034, 0.0402924094, 0.1840802832, 0.0309531588, 0.1262256404, 0.2115925805, 0.0541492907, 0.0182775368, 0.0029193275, 0.0029108298, 0.0025637876, 0.0025572314, 0.0076005091, 0.0214136099, 0.0102340949, 0.0209751892, 0.0035961718, 0.0190815978, 0.0141557822, 0.0173742411, 0.0150963148, 0.007114926, 0.0249276883, 0.0029151054, 0.0082626985, 0.0092286569, 0.007018748, 0.0084161737, 0.0075504193, 0.0088323052, 0.0069970325, 0.353719625, 0.0075926512, 0.0149786106, 0.003617904, 0.0052750846, 0.0032705882, 0.0050725177, 0.0110966253, 0.0063294491, 0.0249931415, 0.029406458, 0.0335867158, 0.0112785437, 0.0769287324, 0.0140524623, 0.0173770399, 0.1355007675, 0.0337012967, 0.0263176249, 0.0301176379, 0.0035349032, 0.0109211286, 0.0172421231, 0.0102733866, 0.0112891513, 0.0136601878, 0.0169202421, 0.0150782112, 0.0062088382, 0.0209605733, 0.0080554498, 0.0909453151, 0.0082996963, 0.0109536598, 0.0627472116, 0.0084357507, 0.0590424617, 0.0087513889, 0.0107931327, 0.0134014689, 0.01492501, 0.012731162, 0.0066330767, 0.0190581878, 0.0127058255, 0.0121764717, 0.009297616, 0.0115774571, 0.0093848729, 0.0125836559, 0.0427743799, 0.0081956942, 0.0272124694, 0.002888814, 0.0280618207, 0.0030807573, 0.0119380745, 0.0060532011, 0.0085822151, 0.0346297682, 0.0103460106, 0.0066946863, 0.0026485594, 0.0267114875, 0.0169425276, 0.0351137196, 0.0070161525, 0.0068130019, 0.0048133404, 0.0053737823, 0.0067376243, 0.0243551472, 0.0537340633, 0.0644233036, 0.0190180427, 0.0089771886, 0.0073465938, 0.0060878368, 0.0056228305, 0.0060925772, 0.0041428631, 0.0230326529, 0.003557517, 0.0037782549, 0.0038391372, 0.0115573675, 0.0042873565, 0.0037249398, 0.0034977038, 0.0247253845, 0.0053183478, 0.0060846542, 0.0086426185, 0.0107556585, 0.0062639329, 0.0062249402, 0.0039242315, 0.0062639329, 0.0208000737, 0.0086313437, 0.0498747218, 0.0044669748, 0.0028432849, 0.0087064924, 0.0110887539, 0.0042361992, 0.0474971298, 0.0052981221, 0.0061318282, 0.0030261332, 0.0021644646, 0.0038241241, 0.003153967, 0.0032169065, 0.0062593886, 0.0032952052, 0.0115602481, 0.0116954504, 0.0031687598, 0.0026437895, 0.0049734056, 0.0029167189, 0.003284839, 0.0116121044, 0.0017487239, 0.004035516, 0.0019386548, 0.0032257242, 0.0023550631, 0.0035827351, 0.0008789684, 0.0019413851, 0.0039110747, 0.0015595873, 0.0024604602, 0.0071142727, 0.0003686267, 0.0007475645, 0.0028197292, 0.0015604449, 0.0032223702, 0.0011546831, 0.0014014936, 0.0023812018, 0.0123208079, 0.0008829674, 0.0014588731, 0.003036397, 0.0014356302, 0.0022257819, 0.0028274015, 0.0009376134, 0.0015885543, 0.0122834692, 0.0009122466, 0.0022154718, 0.003077645, 0.0013372753, 0.052597443, 0.0012693483, 0.0020925268, 0.0067440587, 0.0012201744, 0.0021827234]
# indicators = ['-', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'f', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'f', 'ideal', 'f', 'f', 'f', 'f', 'f', 'ideal', 'ideal', 'f', 'f', 'nadir', 'f', 'f', 'f', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'ideal', 'f', 'nadir', 'ideal', 'nadir', 'nadir', 'ideal', 'nadir', 'ideal', 'ideal', 'ideal', 'f', 'f', 'nadir', 'nadir', 'f', 'ideal', 'nadir', 'f', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'ideal', 'nadir', 'ideal', 'ideal', 'nadir', 'ideal', 'nadir', 'ideal', 'f', 'nadir', 'nadir', 'ideal', 'f', 'nadir', 'f', 'f', 'ideal', 'f', 'ideal', 'f', 'nadir', 'ideal', 'nadir', 'nadir', 'nadir', 'ideal', 'f', 'nadir', 'f', 'nadir', 'nadir', 'f', 'nadir', 'nadir', 'f', 'nadir', 'f', 'f', 'f', 'f', 'f', 'nadir', 'nadir', 'nadir', 'f', 'f', 'f', 'f', 'f', 'f', 'ideal', 'nadir', 'f', 'f', 'f', 'ideal', 'f', 'ideal', 'f', 'nadir', 'ideal', 'f', 'f', 'nadir', 'nadir', 'nadir', 'f', 'nadir', 'nadir', 'ideal', 'nadir', 'f', 'f', 'ideal', 'ideal', 'ideal', 'nadir', 'nadir', 'ideal', 'ideal', 'f', 'f', 'f', 'f', 'nadir', 'ideal', 'ideal', 'ideal', 'f', 'f', 'f', 'f', 'f', 'ideal', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'nadir', 'f', 'f', 'nadir', 'f', 'f', 'f', 'f', 'f', 'nadir', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'f', 'nadir', 'f', 'f', 'f', 'f', 'nadir', 'f', 'f', 'nadir', 'f', 'f']
# convergence_eps = 0.05
# investment_period = 3

# experiment 10
# front_num_Array = [6, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
# n_nds_Array = [17, 9, 17, 22, 23, 19, 22, 21, 23, 33, 23, 28, 38, 32, 36, 36, 35, 40, 44, 46, 49, 40, 45, 48, 48, 55, 64, 72, 73, 77, 82, 84, 89, 91, 94, 94, 99, 101, 99, 103, 108, 110, 99, 110, 108, 111, 107, 109, 112, 105, 111, 82, 89, 95, 94, 83, 90, 93, 81, 84, 87, 88, 91, 95, 99, 88, 92, 99, 103, 106, 106, 106, 108, 85, 89, 97, 98, 102, 108, 108, 108, 92, 85, 95, 98, 98, 108, 105, 107, 116, 114, 113, 111, 115, 120, 82, 91, 99, 106, 89, 107, 113, 112, 116, 115, 113, 117, 116, 120, 123, 116, 115, 119, 88, 116, 122, 121, 123, 123, 128, 127, 129, 128, 130, 129, 96, 102, 104, 109, 102, 102, 104, 104, 103, 109, 109, 107, 111, 112, 115, 118, 120, 105, 110, 112, 119, 121, 124, 125, 119, 126, 128, 128, 131, 103, 107, 113, 114, 119, 118, 116, 116, 117, 117, 120, 125, 126, 129, 128, 128, 134, 127, 126, 129, 132, 131, 136, 134, 135, 135, 135, 136, 136, 138, 139, 141, 140, 139, 141, 139, 139, 140, 141, 140, 142, 140, 139, 139, 142, 140]
# eps = [None, 0.2553153871, 0.2133960894, 0.1389068142, 0.2425605143, 0.1593553572, 0.0812217673, 0.269290255, 0.220293941, 0.0415428366, 0.3648770848, 0.0088200262, 0.0087429134, 0.0252815067, 0.0218874191, 0.0039301881, 0.0032433458, 0.0041364301, 0.0695074426, 0.0226746875, 0.002708487, 0.0236304776, 0.0027566337, 0.0490268066, 0.0415350749, 0.0122838277, 0.0080399846, 0.0328067719, 0.0057123645, 0.0509893643, 0.0193161468, 0.0809346177, 0.0657624949, 0.0037978281, 0.0060436668, 0.0328152473, 0.0412256708, 0.0384793096, 0.0379179659, 0.0067012799, 0.0364796558, 0.039665115, 0.1076340296, 0.0629414245, 0.0459526287, 0.0325679748, 0.0671691463, 0.0068150627, 0.0072971813, 0.0069795221, 0.0074399983, 0.0088275616, 0.3595313339, 0.0358987553, 0.7404313119, 0.4289605724, 0.0112684309, 0.3016818893, 0.0037824751, 0.0226473252, 0.0794065617, 0.0240123426, 0.0208013414, 0.02173711, 0.0084994552, 0.2280527866, 0.2745023297, 0.0026517085, 0.0311698927, 0.2304906164, 0.0248481817, 0.0321727127, 0.0063632474, 0.7413254439, 0.0321090412, 0.0400638611, 0.0056949094, 0.0187670403, 0.037686386, 0.19266667, 0.1027463139, 0.0039299584, 0.0039145743, 0.0037876205, 0.0030824328, 0.0040580974, 0.0040416958, 0.0065793131, 0.0036378374, 0.0087325337, 0.0202568229, 0.0064220753, 0.1585226042, 0.0055384559, 0.0059816643, 0.0069500461, 0.0119423603, 0.0106199624, 0.0214058723, 0.0062902828, 0.293419875, 0.0095491217, 0.0060095672, 0.3166298774, 0.0952207114, 0.0094185605, 0.0035598503, 0.0428445792, 0.004409597, 0.0080222074, 0.0080870837, 0.0088371546, 0.0080870837, 0.0026953059, 0.0080222074, 0.0091478289, 0.0493212558, 0.0114368982, 0.0336464157, 0.0100120915, 0.0080750692, 0.0081408068, 0.0081028841, 0.0307615962, 0.0128252084, 0.017659775, 0.0109014055, 0.0326833855, 0.0491507856, 0.002703937, 0.3898703251, 0.0291907595, 0.4013393352, 0.1365142354, 0.0740484649, 0.002983824, 0.2799746944, 0.0029859499, 0.0289465814, 0.0211038402, 0.0228530507, 0.0145001407, 0.0224759317, 0.0362238489, 0.0077425735, 0.0033402389, 0.0029524494, 0.0244460683, 0.0120725143, 0.0055864009, 0.0042050937, 0.0033375529, 0.0360228475, 0.0389829798, 0.1058443262, 0.0048027519, 0.0399844686, 0.0416498143, 0.2229740393, 0.0716089728, 0.0109459338, 0.0233311092, 0.0179341602, 0.0170009516, 0.0659362634, 0.0705907539, 0.0349705845, 0.0087880191, 0.0341008899, 0.01869528, 0.0305593446, 0.1264324912, 0.0279591941, 0.0222429835, 0.0128038052, 0.021958165, 0.1647024938, 0.0197711055, 0.0079445281, 0.0159086294, 0.0179141491, 0.0091298217, 0.0110345989, 0.0093678588, 0.0176770291, 0.0126358665, 0.0077570995, 0.0202528735, 0.011186214, 0.0134677085, 0.0053368361, 0.0069827641, 0.0053278053, 0.0067231317, 0.0118142317, 0.0704986596, 0.0100650304, 0.0042057501, 0.056575971, 0.025824452]
# indicators = ['-', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'nadir', 'ideal', 'nadir', 'f', 'ideal', 'ideal', 'f', 'f', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'f', 'nadir', 'nadir', 'ideal', 'nadir', 'ideal', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'ideal', 'nadir', 'nadir', 'ideal', 'nadir', 'nadir', 'f', 'nadir', 'ideal', 'nadir', 'nadir', 'f', 'ideal', 'nadir', 'nadir', 'nadir', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'f', 'ideal', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'nadir', 'ideal', 'nadir', 'nadir', 'nadir', 'ideal', 'ideal', 'f', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'f', 'ideal', 'f', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'nadir', 'ideal', 'f', 'f', 'nadir', 'nadir', 'f', 'nadir', 'nadir', 'nadir', 'ideal', 'nadir', 'ideal', 'f', 'f', 'f', 'f', 'nadir', 'f', 'nadir', 'ideal', 'ideal', 'nadir', 'nadir', 'ideal', 'ideal', 'ideal', 'f', 'nadir', 'nadir', 'ideal', 'nadir', 'nadir', 'nadir', 'nadir', 'nadir', 'f', 'f', 'nadir', 'nadir', 'nadir', 'f', 'nadir', 'nadir', 'f', 'f', 'nadir', 'f', 'f', 'nadir', 'f', 'nadir', 'f', 'f', 'f', 'f', 'nadir', 'f', 'nadir', 'nadir', 'f', 'f', 'f', 'f', 'f', 'ideal', 'nadir', 'ideal', 'f', 'f', 'nadir', 'f', 'f', 'nadir', 'nadir']
# convergence_eps = 0.15
# investment_period = 6

# experiment 13
front_num_Array = [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
n_nds_Array = [20, 13, 14, 10, 15, 14, 15, 16, 20, 10, 16, 15, 17, 1, 6, 8, 8, 10, 11, 12, 11, 12, 13, 16, 16, 11, 12, 11, 13, 19, 23, 26, 26, 24, 26, 23, 23, 22, 24, 31, 32, 31, 36, 34, 37, 35, 37, 39, 38, 42, 41, 39, 36, 30, 33, 34, 40, 34, 23, 29, 30, 32, 34, 39, 37, 36, 38, 39, 49, 44, 55, 48, 31, 21, 27, 21, 24, 25, 23, 28, 39, 30, 32, 31, 38, 35, 36, 33, 31, 30, 32, 38, 30, 35, 38, 31, 30, 33, 31, 39, 39, 28, 31, 28, 30, 37, 39, 33, 35, 36, 33, 33, 41, 45, 38, 51, 51, 50, 54, 58, 55, 53, 53, 54, 54, 52, 50, 41, 48, 33, 39, 44, 48, 49, 43, 48, 52, 20, 22, 34, 50, 38, 49, 52, 58, 54, 47, 46, 47, 38, 46, 30, 38, 42, 40, 40, 55, 51, 51, 63, 22, 50, 51, 53, 56, 60, 53, 52, 25, 44, 45, 43, 53, 52, 58, 44, 51, 40, 52, 53, 57, 58, 43, 26, 37, 30, 27, 28, 36, 31, 35, 36, 41, 31, 32, 37, 40, 39, 40, 45]
eps = [None, 0.4887405836, 0.2656094966, 0.3282179308, 0.2251660444, 0.3234652462, 0.2176335087, 0.4885638175, 0.3282115364, 0.1293842567, 0.0924333577, 0.2076983416, 0.2217475845, 0.2168538813, 1.0, 0.7097396886, 0.2598375749, 0.1709311793, 0.0665301583, 0.0467429953, 0.2384624487, 0.3219901119, 0.0260529447, 0.160329508, 0.0779568546, 0.1748584137, 0.0915593501, 0.0712142795, 0.0888379652, 0.1613996299, 0.0537667752, 0.0775473772, 0.1983437891, 0.0182936902, 0.2914509907, 0.1574819041, 0.1899102408, 0.0185164131, 0.0171909256, 0.0064518566, 0.1032591451, 0.1151493707, 0.0350842298, 0.0237609802, 0.0363598885, 0.0195745634, 0.0155681903, 0.0664502573, 0.0253299344, 0.034545307, 0.0246630882, 0.0280820512, 0.0028593243, 0.023904391, 0.0035778287, 0.0360051489, 0.0082604185, 0.047936256, 0.1138706058, 0.0267432514, 0.0460793601, 0.0572027933, 0.0275414939, 0.0267844193, 0.0287221115, 0.2989633114, 0.0400803464, 0.5704150648, 0.0376606421, 0.0396665278, 0.0258143242, 0.0228053936, 0.0278546385, 0.0444548406, 0.0114108559, 0.0905786136, 0.1325354708, 0.1118776286, 0.1006204511, 0.0237553436, 0.0478518644, 0.0502567432, 0.1010689606, 0.0036163639, 0.0856971537, 0.023296843, 0.0967718679, 0.0286044464, 0.0824282923, 0.1925633712, 0.0200372793, 0.0082022518, 0.045486415, 0.0501758871, 0.0834212913, 0.0806928172, 0.0677129214, 0.0421955164, 0.047470717, 0.0683743015, 0.0286877903, 0.0125255002, 0.0261347271, 0.0597309529, 0.0690885335, 0.0866184378, 0.0534790864, 0.0624487274, 0.0536475782, 0.0461223582, 0.0447572632, 0.0521893542, 0.0152147653, 0.006620414, 0.0078630154, 0.0085788753, 0.0247717798, 0.0299688556, 0.0259200847, 0.0099874691, 0.025796826, 0.0393382486, 0.0405229032, 0.2864686029, 0.0191945576, 0.0232428274, 0.0153799743, 0.0105840206, 0.0259565187, 0.0091747774, 0.038066485, 0.0133994739, 0.0484363872, 0.0349051102, 0.3262685098, 0.0401961767, 0.0182768489, 0.1076294851, 0.0309906213, 0.1134202764, 0.1279301493, 0.0174021589, 0.0404731751, 0.0299912445, 0.0159438007, 0.0133850745, 0.0227264671, 0.0124418803, 0.0265190026, 0.029695819, 0.0218591111, 0.0057724276, 0.004582507, 0.0049771965, 0.0211841457, 0.0213721461, 0.0130044282, 0.0061387041, 0.0088096075, 0.0088879065, 0.0508554004, 0.0465977289, 0.0612843925, 0.0331577755, 0.0109760686, 0.0061267544, 0.0426482121, 0.0121366546, 0.0256980578, 0.0213823772, 0.0218040755, 0.004848651, 0.0103939078, 0.0213580649, 0.0123695107, 0.0093292947, 0.4120256835, 0.7007545599, 0.012046991, 0.0390693542, 0.0404400027, 0.0204727073, 0.0122296931, 0.0720065579, 0.0269987518, 0.011812512, 0.6534497419, 0.010608301, 0.8285475574, 0.141752639, 0.0101906341, 0.0309820202, 0.0139488563, 0.0199810936, 0.0060046966, 0.0238367585, 0.0437845416, 0.002801755, 0.0351141778, 0.020807439]
indicators = ['-', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'ideal', 'nadir', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'nadir', 'ideal', 'nadir', 'nadir', 'nadir', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal', 'ideal']
convergence_eps = 0.40
investment_period = 12

# Prepare data
n_gen = list(range(1, 201))
eps = [float('nan') if v is None else v for v in eps]
eps_array = np.array(eps)

# Optional: smooth trend line
window = 10
rolling_eps = pd.Series(eps_array).rolling(window, min_periods=1).mean()

# Plotting
plt.figure(figsize=(21, 7))

# Main epsilon line
plt.plot(n_gen, eps_array, linestyle='-', color='gray', alpha=0.4, label='Raw Epsilon Indicator')

# Smoothed line (moving average)
plt.plot(n_gen, rolling_eps, linestyle='-', color='purple', linewidth=2, label=f'{window}-gen Moving Average')

# Scatter points by category
color_map = {'-': 'gray', 'ideal': 'b', 'f': 'g', 'nadir': 'r'}
marker_map = {'ideal': 'o', 'f': 'p', 'nadir': 'h', '-': 'x'}
for i in range(len(n_gen)):
    if not np.isnan(eps[i]):
        marker = marker_map.get(indicators[i], 'o')

        size_map = {'ideal': 8, 'f': 14, 'nadir': 14, '-': 14}
        plt.plot(n_gen[i], eps[i], marker=marker, color=color_map[indicators[i]], linestyle='None', markersize=size_map.get(indicators[i], 10))
        # plt.plot(n_gen[i], eps[i], marker=marker, color=color_map[indicators[i]], linestyle='None')

# Add convergence threshold line
plt.axhline(y=convergence_eps, color='red', linestyle='--', linewidth=1.5, label='Convergence Threshold')

# Set y-axis to log scale
plt.yscale('log')


# Labels and formatting
plt.xlabel('Generation', fontsize=24)
plt.ylabel('Epsilon Indicator (Logarithmic Scale)', fontsize=24)
# plt.title(f'Epsilon Indicator Trajectory Across Generations (Logarithmic Scale) for a {investment_period}-Month Investment Period', fontsize=24)
plt.grid(True, which='both', linestyle='--', linewidth=0.5)
plt.tick_params(axis='both', labelsize=24)

# Custom legend
custom_lines = [
    Line2D([0], [0], color='gray', linestyle='-', label='Raw Epsilon Indicator'),
    Line2D([0], [0], color='purple', linestyle='-', linewidth=2, label='Moving Average'),
    Line2D([0], [0], color='red', linestyle='--', label='Convergence Threshold'),
    Line2D([0], [0], color='b', marker='o', linestyle='None', label='Ideal Point', markersize=14),
    Line2D([0], [0], color='g', marker='p', linestyle='None', label='F Point', markersize=14),
    Line2D([0], [0], color='r', marker='h', linestyle='None', label='Nadir Point', markersize=14)
]


# Bold tick labels on both axes
# for label in plt.gca().get_xticklabels():
#     label.set_fontweight('bold')
# for label in plt.gca().get_yticklabels():
#     label.set_fontweight('bold')

# bold_font = FontProperties(weight='bold', size=24)
# plt.legend(handles=custom_lines, loc='upper right', prop=bold_font)
bold_font = FontProperties(size=24)
plt.legend(
    handles=custom_lines,
    prop=bold_font,
    loc='center left',
    bbox_to_anchor=(1.02, 0.5),
    borderaxespad=0,
    frameon=False
)
plt.tight_layout(rect=[0, 0, 0.85, 1])

plt.tight_layout()
plt.show()