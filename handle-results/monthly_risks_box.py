import matplotlib.pyplot as plt
import pandas as pd
import numpy as np


# title = 'Risks over 12-month investments (NSGA-III)'
data = {
    '1': [-0.0392952536645, -0.0196934666994, -0.0268382179746, -0.0420571301361, 0.0093707175301, -0.0266091401028, -0.0428035196531, -0.0220932129111, -0.0332561776722, -0.0521862876910, 0.0745709615067, -0.0573565972330, -0.0237796120898, -0.0386178549743, -0.0177634368243, -0.0085723367674, -0.0551195653036, -0.0233607442808, -0.0179601143229, -0.0385984222644, -0.0394388736661, -0.0256325881381, -0.0215806116387, 0.0006162041348],  # Replace with your actual results
    '2': [-0.0477328360760, -0.0374471084390, -0.0474817234784, -0.0577114765918, -0.0170139966147, -0.0499677845297, -0.0507601266044, -0.0435877046023, -0.0613717119364, 0.0000000000000, -0.0286842119018, -0.0595850581138, -0.0402446874449, -0.0519327632828, -0.0455557297415, -0.0393998207432, -0.0629894653891, -0.0307014537003, -0.0557661466451, -0.0214829868692, -0.0477078917976, -0.0320298230309, -0.0401228841214, -0.0489749620966],
    '3': [-0.0679428249811, -0.0551206349018, -0.0565476281180, -0.0351908485881, 0.0355109209488, -0.0734372760131, -0.0767325835937, -0.0785289604300, 0.0000000000000, 0.0000000000000, -0.0474008668918, -0.0702618183707, -0.0320660115233, -0.0805339680575, -0.0687920977980, -0.0778916512355, -0.0692707099886, -0.0533872480733, -0.0633471252142, -0.0401361418880, -0.0573211169557, 0.0000000000000, 0.0000000000000, 0.0000000000000],
    '4': [-0.0975882101541, -0.0948834232781, -0.0979611063718, 0.0000000000000, -0.0651807557143, -0.1186770860912, -0.0958145143584, -0.0991032477884, -0.1086124390133, -0.0923674098916, -0.0960336969731, -0.0908547507806, -0.0941405022173, -0.1129922248014, -0.0869580819691, -0.1242717894191, -0.1008967319479, -0.0798586740019, -0.0997064188039, -0.0985775948867, -0.1059624949291, -0.0923309167107, -0.1005233034021, -0.0814660144749],
    '5': [-0.1819986216728, -0.1399468323991, -0.1334698860123, -0.2697663864430, -0.1379885172101, -0.1637237805462, -0.2122173482303, -0.1796012051963, -0.1959613327500, -0.2601832659959, -0.1559828136037, -0.1702017810813, -0.2340724126116, -0.1428418573044, -0.1871675920972, -0.1970680632201, -0.1837294161494, -0.1331316445558, -0.1303393589958, -0.1897895776264, -0.1740670651259, -0.1594951011896, -0.1347025261232, -0.2335502668012],
    '6': [-0.1476092764563, -0.1571242387903, -0.1606787713695, -0.2881445190957, -0.1420128425056, -0.1720696566710, -0.2339883269410, -0.1916458508740, -0.2277973419433, -0.2745848020651, -0.1601096010373, -0.1800649341376, -0.2381892594253, -0.1556173277789, -0.1985460245290, -0.1842770179913, -0.1961842612034, -0.1407494614377, -0.1461049554072, -0.2020974437375, -0.1945219765397, -0.1672110954250, -0.1490763162235, -0.2431750189070],
    '7': [-0.1517261929893, -0.1624868606073, -0.1663985200317, -0.2814236764950, -0.1424163408248, -0.1792883560188, -0.2357539390562, -0.1841694077183, -0.2397582240537, -0.3030656708145, -0.1694047765880, 0.0000000000000, -0.2508169332883, -0.1612772851563, -0.2183531624084, -0.1956848408314, -0.1911491304632, -0.1431292420433, -0.1605170851063, -0.2038032010324, -0.1748427414813, -0.1779652169480, -0.1639717962471, -0.2584880341257],
    '8': [-0.1686496086624, 0.0000000000000, -0.1662228074283, -0.2969204540695, -0.1514914458782, 0.0000000000000, -0.2478663521979, -0.2082410176793, 0.0000000000000, -0.3142181077360, -0.1785307652831, 0.0000000000000, -0.2577800387419, -0.1516421725552, -0.2405388508957, -0.2001615606010, -0.2002172410108, -0.1434730366368, -0.1547914197107, -0.2161394182691, 0.0000000000000, -0.1883129059643, 0.0000000000000, -0.2854262138297],
    '9': [-0.1638813714003, 0.0000000000000, -0.1832972529498, -0.2940673612659, -0.1547694995901, -0.1898964385555, -0.2373146343480, -0.1925552545073, -0.2283119896120, -0.3098540316610, -0.1903607321431, -0.1406106473838, -0.1914153830355, -0.1639876242970, -0.2353368773880, -0.2105330586988, -0.1894906728237, -0.1488471508123, -0.1512000762321, -0.2102365111762, 0.0000000000000, -0.1815815417204, -0.1824175749137, -0.1959133474926],
    '10': [-0.1615015131155, -0.1535937964031, -0.1854652775318, -0.2855622171385, 0.0000000000000, -0.1902400745714, -0.2357965642419, 0.0000000000000, -0.2035381610179, -0.3077298952256, -0.1922926290971, -0.1149315212040, -0.2458682432782, -0.1711395423504, -0.2444996987314, -0.2073750742401, -0.2017234060150, -0.1545308484398, -0.1571919574700, -0.1726896780565, 0.0000000000000, -0.1791824227920, -0.1777038048482, -0.1830760778389],
    '11': [-0.1686739381549, 0.0000000000000, -0.1762953907539, -0.2760823863947, -0.3313390772822, -0.1908650820174, 0.0000000000000, 0.0000000000000, 0.0000000000000, -0.3128555735248, -0.1760765458028, -0.1119007296824, 0.0000000000000, -0.1682583699329, -0.2344439607750, -0.2013897080069, -0.2074584113547, -0.1151283828680, 0.0000000000000, -0.1761346766178, 0.0000000000000, 0.0000000000000, 0.0000000000000, -0.2052379996772]
}

# title = 'Risks over 12-month investments (NSGA-III-HOP)'
# data = {
#     '1': [-0.0549587520840, -0.0799941251113, -0.0451113966411, -0.0472824103881, -0.0499329865989, -0.0569209630284, -0.0669137855615, -0.0590908701233, -0.0609960843210, -0.0784404308154, -0.0668275200633, -0.0624196626499, -0.0572214133768, -0.0723801258536, -0.0469220096342, -0.0732326189515, -0.0639418548726, -0.0710537889639, -0.0457189014837, -0.0823044089681],
#     '2': [-0.0548883833496, -0.0624838278440, -0.0405457014860, -0.0530025826279, -0.0417631430254, 0.0000000000000, -0.0384732108773, -0.0520785596306, -0.0537125820891, -0.0404215049221, -0.0463032514519, -0.0565007301309, -0.0566253928006, -0.0650451469743, -0.0332335295440, -0.0602144976441, -0.0438582520667, 0.0000000000000, -0.0347596548854, -0.0667324477823],
#     '3': [-0.0657814681197, -0.0770781785811, -0.0516315589818, -0.0749406429030, -0.0347779703387, 0.0000000000000, -0.0491172793906, 0.0000000000000, -0.0402661805023, -0.0470057683511, 0.0000000000000, -0.0566276703505, -0.0648764047738, -0.0706401079677, -0.0360143340258, -0.0664799747231, -0.0728877395868, 0.0000000000000, 0.0000000000000, -0.0706430798607],
#     '4': [-0.0861692387455, -0.0973908297994, -0.0249352698024, -0.0799434078440, -0.0296061636330, 0.0000000000000, -0.0821825600420, -0.0915004486032, -0.1247262896450, -0.0728474157229, -0.0741462161908, -0.0927104351968, -0.0817384164244, 0.0000000000000, -0.0343597200978, -0.0880747302572, -0.0910084632668, -0.0843648514555, -0.0930239666741, -0.0774975393288],
#     '5': [-0.2260372171343, -0.1703395559946, -0.0997466241925, -0.1895842349581, -0.0807314629339, -0.1798748989388, -0.1028642873143, 0.0000000000000, -0.1336294220361, -0.1104051589396, -0.1312226351641, -0.1989149519221, -0.1661494922184, -0.1803734599506, -0.0670712963139, -0.1228554431761, -0.1956034364852, -0.1277136126954, -0.1135738902077, -0.2022593372160],
#     '6': [-0.2382464533307, -0.1749092950463, -0.1095365342606, -0.2169327221753, -0.0857072061730, -0.2038464501677, -0.1073424289482, 0.0000000000000, -0.1507766163028, -0.1303877254296, -0.1379952168379, -0.2236233443711, -0.1942258379345, -0.2201224644112, -0.0698022662586, -0.1235876578024, -0.2127124292854, 0.0000000000000, -0.1170300842647, -0.2223403583276],
#     '7': [-0.2427123887526, -0.2051275115310, -0.1189622498333, -0.2089138197859, -0.0849493493231, -0.2045836800832, -0.1002445782125, -0.1247188727219, -0.1738071440741, -0.1498872228510, -0.1446086725612, -0.2425558061275, -0.1919909443722, -0.2287132587467, -0.0947859866018, -0.1384904185894, -0.2142826404707, 0.0000000000000, -0.0971867851237, -0.2143832609258],
#     '8': [-0.2594892971419, -0.2126103396827, -0.1267530483984, -0.2345131429135, -0.0989324802687, -0.2196882746403, 0.0000000000000, 0.0000000000000, 0.0000000000000, -0.1389843390595, -0.1510486544195, -0.2592565410386, -0.1997944831216, -0.2406973955465, 0.0000000000000, -0.1029642851617, -0.2236101902945, 0.0000000000000, 0.0000000000000, -0.2265988721008],
#     '9': [-0.2485834267962, -0.1535334549885, 0.0000000000000, -0.2296579647763, -0.0863442311379, -0.1971299774125, -0.1374986822889, 0.0000000000000, 0.0000000000000, -0.1564574044205, -0.1613143586698, -0.2527958851808, -0.1798150220554, -0.2349931914122, 0.0000000000000, -0.1271802115998, -0.2398481262667, 0.0000000000000, -0.1129566444147, -0.2234311500196],
#     '10': [-0.2536365833644, -0.1554683746421, -0.1035751834181, -0.2463830307530, -0.0940563867041, -0.2030853793979, 0.0000000000000, 0.0000000000000, 0.0000000000000, -0.1320716258510, -0.1531599543428, -0.2538698091955, -0.1692203854165, -0.2452391018577, 0.0000000000000, -0.1340893194394, -0.2393748544584, 0.0000000000000, -0.0971005087907, -0.1955571016168],
#     '11': [-0.2494584529520, -0.1226948556745, 0.0000000000000, -0.2485416792912, -0.1024835227685, -0.2989595104510, 0.0000000000000, -0.1215043987863, -0.1793042398968, -0.1344473676196, -0.1997209231128, -0.2457849941036, -0.1598576346139, -0.2824052008058, 0.0000000000000, -0.1767155648146, -0.2326061090773, 0.0000000000000, -0.1183011067392, -0.2240204214133]
# }
# Convert to DataFrame
df = pd.DataFrame(data)

# Plot the box chart
plt.figure(figsize=(20, 10))
box = plt.boxplot([df[col] for col in df.columns], labels=df.columns, patch_artist=True)

# Define custom colors
# colors = ['lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen']
# for patch, color in zip(box['boxes'], colors):
#     patch.set_facecolor(color)

# Customizing the plot
# plt.title(title, fontsize=20, fontweight='bold')
plt.xlabel('Months', fontsize=24)
plt.ylabel('WCVaR Values', fontsize=24)

# Get the current y-axis ticks
default_ticks = plt.gca().get_yticks()
data_min = df.min().min()  # Global minimum value in the dataset
data_max = df.max().max()  # Global maximum value in the dataset
y_custom_ticks = [data_min, data_max]
y_new_ticks = sorted(set(default_ticks).union(y_custom_ticks))  # Combine and sort
# y_new_ticks = [tick for tick in y_new_ticks if tick != -0.30000000000000004]  # Remove -0.3 due to overlapped ticks

plt.yticks(y_new_ticks, fontsize=24)  # Apply custom y-ticks
# Adjust Y-ticks: Format numbers & reduce density
# plt.yticks(np.round(np.linspace(df.min().min(), df.max().max(), num=6), 4), fontsize=20)

plt.xticks(fontsize=24)  # Set font size for x-axis labels
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Show the plot
plt.show()