import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import matplotlib.ticker as mticker
# ax = plt.gca()



# 'Risks over 12-month investments (NSGA-III)'
# 0 return, next 11 coumns is risks, 10 executions
# data = {
#     '1':[0.300 , 0.068 , 0.023 , 0.020 , 0.293 , 0.313 , 0.109 , 0.091 , 0.016 , 0.015 , 0.039 , 0.089 ],
#     '2': [0.300 , 0.059 , 0.017 , 0.016 , 0.035 , 0.106 , 0.109 , 0.016 , 0.166 , 0.166 , 0.039 , 0.172 ],
#     '3': [0.300 , 0.173 , 0.039 , 0.045 , 0.050 , 0.268 , 0.268 , 0.056 , 0.029 , 0.256 , 0.014 , 0.184 ],
#     '4': [0.299 , 0.061 , 0.139 , 0.131 , 0.098 , 0.104 , 0.156 , 0.163 , 0.077 , 0.106 , 0.061 , 0.051 ],
#     '5': [0.299 , 0.059 , 0.017 , 0.032 , 0.035 , 0.127 , 0.167 , 0.102 , 0.008 , 0.169 , 0.036 , 0.049 ],
#     '6': [0.300 , 0.104 , 0.055 , 0.057 , 0.067 , 0.261 , 0.035 , 0.028 , 0.096 , 0.014 , 0.110 , 0.052 ],
#     '7': [0.300 , 0.052 , 0.017 , 0.022 , 0.025 , 0.637 , 0.045 , 0.170 , 0.004 , 0.011 , 0.075 , 0.110 ],
#     '8': [0.300 , 0.055 , 0.023 , 0.026 , 0.028 , 0.208 , 0.198 , 0.111 , 0.117 , 0.031 , 0.025 , 0.091 ],
#     '9': [0.300 , 0.078 , 0.045 , 0.049 , 0.066 , 0.039 , 0.172 , 0.098 , 0.012 , 0.026 , 0.033 , 0.107 ],
#     '10': [0.299 , 0.111 , 0.027 , 0.186 , 0.051 , 0.074 , 0.058 , 0.056 , 0.105 , 0.110 , 0.309 , 0.308 ],
# }
# risks
data = {
    '1':[ 0.059,0.173,0.061,0.059,0.104,0.052,0.055,0.078,0.111 ],
    '2': [ 0.017,0.039,0.139,0.017,0.055,0.017,0.023,0.045,0.027 ],
    '3': [ 0.016,0.045,0.131,0.032,0.057,0.022,0.026,0.049,0.186 ],
    '4': [ 0.035,0.05,0.098,0.035,0.067,0.025,0.028,0.066,0.051 ],
    '5': [ 0.106,0.268,0.104,0.127,0.261,0.637,0.208,0.039,0.074 ],
    '6': [ 0.109,0.268,0.156,0.167,0.035,0.045,0.198,0.172,0.058 ],
    '7': [ 0.016,0.056,0.163,0.102,0.028,0.17,0.111,0.098,0.056 ],
    '8': [ 0.166,0.029,0.077,0.008,0.096,0.004,0.117,0.012,0.105 ],
    '9': [ 0.166,0.256,0.106,0.169,0.014,0.011,0.031,0.026,0.11 ],
    '10': [ 0.039,0.014,0.061,0.036,0.11,0.075,0.025,0.033,0.309 ],
    '11': [ 0.172,0.184,0.051,0.049,0.052,0.11,0.091,0.107,0.308 ],
}

# 'Risks over 12-month investments (NSGA-III-HOP)'
# 0 return, next 11 coumns is risks, 10 executions
# data = {
#     '1': [0.287 , 0.025 , 0.008 , 0.020 , 0.029 , 0.095 , 0.111 , 0.024 , 0.023 , 0.018 , 0.199 , 0.210 ],
#     '2':[0.102 , 0.009 , 0.007 , 0.047 , 0.028 , 0.042 , 0.040 , 0.047 , 0.023 , 0.009 , 0.026 , 0.145 ],
#     '3': [0.226 , 0.018 , 0.019 , 0.146 , 0.224 , 0.212 , 0.203 , 0.062 , 0.197 , 0.050 , 0.052 , 0.494 ],
#     '4': [0.195 , 0.004 , 0.007 , 0.008 , 0.162 , 0.131 , 0.103 , 0.119 , 0.138 , 0.110 , 0.135 , 0.377 ],
#     '5': [0.245 , 0.006 , 0.021 , 0.020 , 0.057 , 0.310 , 0.046 , 0.201 , 0.030 , 0.033 , 0.040 , 0.096 ],
#     '6': [0.232 , 0.027 , 0.005 , 0.012 , 0.024 , 0.026 , 0.026 , 0.026 , 0.097 , 0.139 , 0.092 , 0.134 ],
#     '7': [0.270 , 0.025 , 0.021 , 0.039 , 0.407 , 0.064 , 0.079 , 0.073 , 0.061 , 0.068 , 0.071 , 0.128 ],
#     '8': [0.182 , 0.010 , 0.004 , 0.017 , 0.023 , 0.055 , 0.180 , 0.015 , 0.024 , 0.147 , 0.130 , 0.120 ],
#     '9': [0.086 , 0.022 , 0.011 , 0.010 , 0.026 , 0.031 , 0.028 , 0.110 , 0.089 , 0.118 , 0.017 , 0.503 ],
#     '10': [0.249 , 0.023 , 0.191 , 0.014 , 0.018 , 0.020 , 0.090 , 0.089 , 0.035 , 0.045 , 0.035 , 0.152 ],
# }
# risks
# data = {
#     '1':[ 0.025,0.009,0.018,0.004,0.006,0.027,0.025,0.01,0.022,0.023 ],
#     '2': [ 0.008,0.007,0.019,0.007,0.021,0.005,0.021,0.004,0.011,0.191 ],
#     '3': [ 0.02,0.047,0.146,0.008,0.02,0.012,0.039,0.017,0.01,0.014 ],
#     '4': [ 0.029,0.028,0.224,0.162,0.057,0.024,0.407,0.023,0.026,0.018 ],
#     '5': [ 0.095,0.042,0.212,0.131,0.31,0.026,0.064,0.055,0.031,0.02 ],
#     '6': [ 0.111,0.04,0.203,0.103,0.046,0.026,0.079,0.18,0.028,0.09 ],
#     '7': [ 0.024,0.047,0.062,0.119,0.201,0.026,0.073,0.015,0.11,0.089 ],
#     '8': [0.023,0.023,0.197,0.138,0.03,0.097,0.061,0.024,0.089,0.035 ],
#     '9': [ 0.018,0.009,0.05,0.11,0.033,0.139,0.068,0.147,0.118,0.045 ],
#     '10': [ 0.199,0.026,0.052,0.135,0.04,0.092,0.071,0.13,0.017,0.035 ],
#     '11': [ 0.21,0.145,0.494,0.377,0.096,0.134,0.128,0.12,0.503,0.152 ],
# }
# Convert to DataFrame
df = pd.DataFrame(data)


# --- build the axes FIRST ---
fig, ax = plt.subplots(figsize=(10, 10))

# ... your boxplot, but draw it on ax
positions = np.linspace(1, len(df.columns), len(df.columns)) * 0.1
box = ax.boxplot([df[c] for c in df.columns],
                 tick_labels=df.columns,
                 patch_artist=True,
                 widths=0.05,
                 positions=positions)
ax.set_xlim(positions[0] - 0.1, positions[-1] + 0.1)

# labels
ax.set_xlabel('Month', fontsize=24)
ax.set_ylabel('WCVaR', fontsize=24)
ax.tick_params(axis='x', labelsize=24)
ax.tick_params(axis='y', labelsize=24)

# --- set yticks explicitly and drop 0 and 0.5 ---
default_ticks = ax.get_yticks()
data_min = df.min().min()
data_max = df.max().max()

ticks = np.unique(np.r_[default_ticks, data_min, data_max])
# remove 0 and 0.5 robustly
# ticks = ticks[~np.isclose(ticks, 0.0) & ~np.isclose(ticks, 0.5)]
ticks = ticks[~np.isclose(ticks, 0.0)]

# lock the major ticks to this list and disable minor ticks
ax.yaxis.set_major_locator(mticker.FixedLocator(ticks))
ax.yaxis.set_minor_locator(mticker.NullLocator())

# grid after locators are set
ax.grid(axis='y', which='major', linestyle='--', alpha=0.7)


palette = ["#FFB000", "#FF3030", "#FF33CC", "#C000FF"]

# one color for everything
c = palette[0]
plt.setp(box['boxes'],    facecolor=c, edgecolor=c)
plt.setp(box['whiskers'], color=c)
plt.setp(box['caps'],     color=c)
plt.setp(box['medians'],  color='black')
plt.setp(box['fliers'],   markeredgecolor=c, markerfacecolor='white')

plt.subplots_adjust(left=0.2)
plt.show()